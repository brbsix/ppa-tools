#!/bin/bash


error(){
    echo "ERROR: $@" >&2
}


main(){
    if (( $# == 1 )) && [[ $1 =~ ^(-h|--help|help)$ ]]; then
        echo "Usage: ${0##*/} <add|install|list|remove> [FILE]"
        exit 0
    fi

    if [[ -z $1 ]]; then
        error "No command provided"
        exit 1
    elif [[ ! $1 =~ ^(add|install|list|remove)$ ]]; then
        error "Invalid command"
        exit 1
    fi

    if [[ $1 = add ]] && (( $# == 2 )); then
        if [[ ! $2 =~ ^ppa: ]]; then
            error "'$2' does not appear to be a PPA (it doesn't start with ppa:)"
            exit 1
        fi
        sudo apt-add-repository "$2"
    elif [[ $1 = install ]] && (( $# == 2 )); then
        # ensure file is a regular file with a size greater than zero
        if [[ -r $2 && -s $2 ]]; then
            while IFS= read -r ppa; do
                sudo apt-add-repository -y "$ppa" >/dev/null 2>&1 && successes+=("$ppa") || failures+=("$ppa")
            done < "$2"

            if (( ${#successes[@]} == 0 )); then
                error "No ppas installed"
                exit 1
            elif (( ${#failures[@]} > 0 )); then
                error "Failed to install the following ppas"
                printf '%s\n' "${failures[@]}"
                exit 1
            fi
        else
            error "'$2' is not a valid target file"
            exit 1
        fi
    elif [[ $1 = list ]] && (( $# == 1 )); then
        find /etc/apt -type f -name '*.list' -exec awk -F '/' '/^deb http:\/\/ppa\.launchpad\.net\// { printf "ppa:%s/%s\n", $4, $5 }' {} + 2>/dev/null | sort -u
        exit 0
    elif [[ $1 = remove ]] && (( $# == 2 )); then
        if [[ ! $2 =~ ^ppa: ]]; then
            error "'$2' does not appear to be a PPA (it doesn't start with ppa:)"
            exit 1
        fi
        sudo apt-add-repository -r "$2"
    else
        error "Invalid number of arguments"
        exit 1
    fi
}


main "$@"
